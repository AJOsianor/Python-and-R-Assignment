README FILE

Flask Application for Data Collection and Analysis

Overview

This Flask application is designed to collect user data related to income and expenses, store it in MongoDB, perform data processing and visualization using Python, and host the application on AWS EC2. The objective is to analyze user spending patterns in preparation for a new product launch in the healthcare industry.

Features

- Data Collection: Users can input their age, gender, total income, and expenses (utilities, entertainment, school fees, shopping, healthcare).
- Data Storage: User data is stored in MongoDB for persistence.
- Data Processing: Python scripts process collected data, store it in CSV format, and perform visualizations for analysis.
- Deployment: The Flask application is hosted on AWS EC2 for accessibility.

Requirements

- Python 3.x
- Flask
- pymongo (for MongoDB integration)
- pandas
- matplotlib
- seaborn

Installation and Setup

1. Setting Up AWS EC2 Instance

- Launch an EC2 instance with Amazon Linux or Ubuntu.
- Connect to the instance using SSH.

2. Installing Dependencies

Update package manager and install necessary packages:
bash
sudo yum update -y   for Amazon Linux
sudo apt-get update  for Ubuntu

sudo yum install python3 python3-pip -y   # Install Python and pip
pip3 install flask pymongo pandas matplotlib seaborn   # Install Flask, MongoDB, and data processing libraries


3. Setting Up MongoDB

- Install MongoDB on your EC2 instance if not already installed.
- Configure MongoDB to run as a service.

4. Clone the Repository

Clone the repository containing your Flask application and data processing scripts:
bash
git clone https://github.com/yourusername/your-repo.git
cd your-repo


5. Configure Flask Application

- Update MongoDB connection settings in your Flask application (`app.py` or equivalent) to point to your MongoDB instance.

6. Running the Flask Application

Run the Flask application:
bash
export FLASK_APP=app.py
flask run --host=0.0.0.0 --port=80

Access your Flask application at `http://your-ec2-public-ip`.

Usage

1. Fill out the data collection form on the web page with age, gender, total income, and expense details.
2. Submit the form to store the data in MongoDB.
3. Use the provided Python scripts (`data_processing.py` and Jupyter notebook) to analyze and visualize the collected data.

File Structure


├── app.py                # Flask application
├── data_processing.py    # Python script for data processing
├── requirements.txt      # Python dependencies
├── templates/            # HTML templates for Flask app
├── static/               # Static files (CSS, JS) for Flask app
├── user_data.csv         # CSV file to store processed data
├── analysis.ipynb        # Jupyter notebook for data analysis and visualization
└── README.md             # This README file


